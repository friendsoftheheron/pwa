@import url('../css/vars.css');
@import url('../css/dual-range.css');
@import url('../css/ratings.css');
@import url('../css/resize.css');
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    accent-color: var(--accent-color);
}

.table-navigation {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
}

body {
    background: var(--sky);
    color: var(--black);
    font-family: "Noto Sans", Arial, Helvetica, sans-serif;
    font-size: 1rem;
    line-height: 1.1rem;
    margin-left: auto;
    margin-right: auto;
    max-width: var(--max-width);
}

header {
    background: var(--white);
    border-bottom: 1px solid var(--orange);
    height: var(--header-height);
    max-width: var(--max-width);
    position: absolute;
    text-align: center;
    top: 0;
    width: 100%;
    padding-top: 0.3rem;
}

footer {
    background: var(--orange);
    bottom: 0;
    color: var(--white);
    height: var(--footer-height);
    margin: auto;
    max-width: var(--max-width);
    padding-bottom: 0;
    padding-top: 0.5rem;
    padding-left: 1rem;
    position:absolute;
    width: 100%;
}

main {
    max-width: var(--max-width);
    position: absolute;
    top: var(--header-height);
    bottom: var(--footer-height);
    background: var(--white);
    padding: 1rem;
    overflow: auto;
    width: 100%;
}

h1 {
    color: var(--orange);
    font-size: 1.5rem;
    line-height: 1.7rem;
}
h2 {
    color: var(--orange);
    font-size: 1.2rem;
    line-height: 1.32rem;
}
h3 {
    color: var(--medium-blue);
    font-size: 1.1rem;
    line-height: 1.21rem;
}

a:link { color: var(--medium-blue); }
a:visited { color: var(--dark-blue); }
a:hover { color: var(--orange); }
a:active { color: var(--light-blue); }

td,th {
    text-align: left;
    vertical-align: top;
}
td {
    border-bottom: 1px solid var(--sky);
}
th {
    border-bottom: 1px solid var(--orange);
}

[id^="map-"],
[data-label-for-range-descrease],
[data-label-for-range-increase],
[data-label-for-radio],
[data-label-for-unchecked],
[href],
label {
    cursor: pointer;
}

li {
    margin-left: 2rem;
}

/* https://stackoverflow.com/questions/7617689/make-table-width-100-with-last-column-filling-remainder-without-squashing-other */
.table-bar { width: 100%; }
.table-bar td { width: 1px; } /* min width, actually: this causes the width to fit the content */
.table-bar td:last-child { width: 100%; } /* well, it's less than 100% in the end, but this still works for me */


.background-sky { background-color: var(--sky); }
.border-green {    border-color: var(--green); }
.border-red { border-color: var(--red); }
.border-yellow { border-color: var(--yellow); }
.border-sky { border-color: var(--sky); }
.border-orange { border-color: var(--orange); }
.dark-blue { color: var(--dark-blue); }
.medium-blue { color: var(--medium-blue); }
.light-blue { color: var(--light-blue); }
.very-light-blue { color: var(--sky); }
.orange { color: var(--orange); }

.blur { filter: blur(0.25rem); }
.clear { clear: both; display: block; }
.colon:after { content: ':'; }
.flex {    display: flex; }
.line-through { text-decoration: line-through; }
.relative { position: relative; }
.w100 { width: 100% }
.left { float: left; }
.right {
    float: right; /* for block */
    margin-left: auto; /* for flex */
}
.margin > * {
    margin: 0.1rem;
}

.left.margin {
    margin-right: 0.5rem;
}

.p {
    padding-top: 0.3rem;
    padding-bottom: 0.2rem;
}

.small {
    font-size: 0.84rem;
    line-height: 0.924rem;
}

/* color out of the not empty, so it can be overwritten with a simple class */
.label {
    background-color: var(--dark-blue);
    color: var(--white);
}
.label:not(:empty) {
    font-size: 0.84rem;
    line-height: 0.924rem;
    border-radius: 0.3rem;
    padding-left: 0.2rem;
    padding-right: 0.2rem;
    margin-top: 0.088rem;
    margin-bottom: 0.088rem;
}

.grid-auto-auto {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-gap: 0.2rem;
}
.grid-col-1-3 {
    grid-column: 1/3;
}

.grid-auto-auto div input:not([type="checkbox"]):not([type="radio"]),
.grid-auto-auto div select
{
    width: 100%;
}

.select-or-input {
    display:flex;
}
.select-or-input select {
    width: 100%;
}
.select-or-input input {
    display: none;
}
.select-or-input[data-value=""] select {
    width: auto;
    max-width: 30%;
}
.select-or-input[data-value=""] input {
    width: 100%;
    display: inherit;
}
.select-or-other select:has(option[selected][value=""]) {
    width: auto;
}
.select-or-other select:has(option[selected][value=""]) ~ input {
}

.alert {
    animation: shake 0.5s infinite;
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-10deg); }
  20% { transform: translate(-3px, 0px) rotate(10deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(10deg); }
  50% { transform: translate(-1px, 2px) rotate(-10deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-10deg); }
  80% { transform: translate(-1px, -1px) rotate(10deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-10deg); }
}

.wait * {
    background-color: var(--sky);
}
.wait .description::before {
    animation: animatedBackground 2.5s linear infinite;
    background-image: url('../images/balloon-cloud.png');
    background-position: bottom right;
    background-repeat: repeat-x;
    background-size: 50%;
    bottom: -1.5rem;
    content: '';
    height: 1000%;
    left: -0.3rem;
    position: absolute;
    width: 110%;
}

@keyframes animatedBackground {
    0% { background-position-x: 0 }
    100% { background-position-x: 100% }
}

.pwa {
    background: linear-gradient(
        -45deg,
        var(--light-blue),
        var(--medium-blue),
        var(--dark-blue),
        var(--dark-blue),
        var(--light-blue),
        var(--medium-blue),
        var(--dark-blue),
        var(--dark-blue),
        var(--dark-blue),
        var(--orange),
        var(--dark-blue)
    );
    background-size: 200% 200%;
    animation: animatedGradient 10s linear infinite;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.pwa:hover {
    background: linear-gradient(
        -35deg,
        var(--orange),
        var(--dark-blue),
        var(--dark-blue),
        var(--dark-blue),
        var(--light-blue),
        var(--medium-blue),
        var(--dark-blue),
        var(--dark-blue),
        var(--light-blue),
        var(--medium-blue),
        var(--dark-blue)
    );
    background-size: 200% 200%;
    animation: animatedGradient 2.5s linear infinite;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

@keyframes animatedGradient {
    0% {
        background-position-x: 100%
    }
    80% {
        transform: rotate(45deg);
        background-position-x: 0;
    }
    100% {
        background-position-x: 100%;
    }
}
@keyframes animatedBackground {
    0% {
        background-position-x: 0;
    }
    100% {
        background-position-x: 100%;
    }
}

[data-loading-counter]::after{
    content: "üåç";
}

[data-loading-counter]:not([data-loading-counter="0"])::after{
    animation: spinGlobe 0.5s linear infinite;
}
@keyframes spinGlobe {
    0% { content: "üåç"; }
    33% { content: "üåé"; }
    67% { content: "üåè"; }
    100% { content: "üåç"; }
}

.warning {
    color: var(--red);
}

.symbol {
    color: var(--medium-blue);
    float: right;
    font-size: 1.4rem;
    line-height: 1.7rem;
    padding-left: 0.2rem;
    padding-right: 0.2rem;
}

.menu {
    padding-top: 0.5rem;
    padding-left: 0.5rem;
    margin-bottom: -0.5rem;
}

.menu li {
    font-size: 1.1rem;
    line-height: 1.5rem;
    color: var(--medium-blue);
    list-style-type: none;
    margin-left: 0.0rem;
}

.plain a { text-decoration: none; }
.plain a:link { color: var(--black); }
.plain a:visited { color: var(--dark-blue); }
.plain a:hover { color: var(--orange); }
.plain a:active { color: var(--light-blue); }


#leaflet,
#map {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: var(--sky);
}

#center_position ~ * #center_div {
    opacity: 0.8;
    width: 2.5rem;
    height: 2.5rem;
    background-image: url("../images/center.png");
    background-size: cover;
}

#center_position ~ * #center_div.clicked,
#center_position:checked ~ * #center_div.clicked {
    background-image: url("../images/center_cl.png");
}

#center_position:checked ~ * #center_div
{
    animation: rotate 15s linear infinite;
    background-image: url("../images/center_ck.png");
}
@keyframes rotate {
    0% {  transform: rotate(0deg); }
    100% {  transform: rotate(360deg); }
}

#qr-image {
    margin-top: 1rem;
    width: 97%
}

#qr-url {
    line-break: anywhere;
}

.messages {
    border: 3px solid var(--sky);
    border-radius: 10px;
    box-shadow: 5px 5px 5px gray;
    margin-bottom: 0.5rem;
    margin-left: 1rem;
    margin-right: 1rem;
    height: auto;
    overflow: hidden;
}

#menu {
    margin-bottom: 0.5rem;
    right: 0.0rem;
    top: 1.7rem;
}

#popup {
    top: 4rem;
    left: 5%;
    max-width: 80%;
}

.popup {
    position: absolute; /* Not fixed because I want it to be relative to the border */
    background-color: var(--white);
    border: 0.25rem solid var(--light-blue);
    border-radius: 1rem;
    box-shadow: 6px 7px 4px #333333cc;
    z-index: 9999;
    padding: 1.3rem 0.5rem 1rem 1rem;
    margin-left: 1rem;
    margin-right: 1rem;
    text-align: left;
    height: auto;
}

.popup::before {
    position:absolute;
    color: var(--white);
    border-radius: 1rem 1rem 0 0;
    border: 0.2rem solid var(--light-blue);
    background-color: var(--gray);
    content: 'X \00a0';
    width: 100%;
    height: 0.9rem;
    top: -0.2rem;
    left: -0.2rem;
    text-align: right;
    font-size: 0.7rem;
    margin-right: 1rem;
    line-height: 0.9rem;
}

.popup .content {
    max-height: calc(100vh - var(--header-height) - var(--footer-height) - 4rem);
    overflow-y: auto;
    overflow-x: hidden;
}
.friends-container {
    display: grid;
    grid-template-columns: min-content auto min-content;
    row-gap: 0.2rem;
    column-gap: 10%;
}
.friends-container span {
    display: block;
    white-space: nowrap;
    width: 100%;
}
div.friends-desc {
    grid-column: 2 / 4;
    font-size: 0.84rem;
    line-height: 0.924rem;
    margin-top: -0.3rem;
    overflow: hidden;
}

#paypal-button-container.disabled {
    cursor: not-allowed;
    filter: grayscale(1);
    opacity: 0.5;
}

.ribbon-box {
    overflow: hidden;
    position: relative;
    display: inline-block;
    padding-right: 0.8rem;
}
.ribbon {
    color: var(--white);
    font-size: 0.56rem;
    font-weight: bold;
    height: 1rem;
    line-height: 1.1rem;
    position: absolute;
    right: -4.6rem;
    text-align: center;
    top: 0;
    transform: rotate(55deg);
    vertical-align: middle;
    width: 10rem;
    animation-name: animatedRibbon;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
.ribbon-9 { animation-duration: 9s; }
.ribbon-11 { animation-duration: 11s; }
.ribbon-13 { animation-duration: 13s; }
.ribbon-green {
    background: linear-gradient(
        55deg
        ,var(--green) 0%
        ,var(--green) 16%
        ,var(--white) 18%
        ,var(--green) 19%
        ,var(--green) 100%
    )
}
.ribbon-yellow {
    background: linear-gradient(
        65deg
        ,var(--yellow) 0%
        ,var(--yellow) 48%
        ,var(--white) 51%
        ,var(--yellow) 52%
        ,var(--yellow) 100%
    )
}
.ribbon-red {
    background: linear-gradient(
        75deg
        ,var(--red) 0%
        ,var(--red) 85%
        ,var(--white) 87%
        ,var(--red) 88%
        ,var(--red) 100%
    )
}

@keyframes animatedRibbon {
    0% { background-position: 0 }
    100% { background-position: 20rem; }
}

.bar {
    background-color: var(--medium-blue);
    border: 1px solid var(--dark-blue);
    border-radius: 3px;
    display: block;
    height: 1rem;
    margin-top: 0.1rem;
    margin-bottom: 0.1rem;
    position:relative;
}
.bar.max {
    background-color: var(--orange);
    border: 1px solid var(--dark-orange);
}
.bar.active {
    background-color: var(--medium-blue);
    height: calc(1rem - 2px);
    z-index: 20;
    border-bottom-right-radius: 5px;
    border-top-right-radius: 5px;
    border-bottom-width: 0;
    border-right-width: 0;
    border-top-width: 0;
}
.bar.max.active {
    background-color: var(--orange);
}
.bar.active+.bar {
    background-color: var(--light-blue);
    margin-top: calc(+1px - 1.1rem);
    position:relative;
    z-index: 10
}
.bar.active+.bar.max {
    background-color: var(--light-orange);
}

.lab {
    border-width: 0.2rem;
    border-style: solid;
    overflow: hidden;
    border-radius: 0.625rem;
    margin-bottom: 0.2rem;
    height: 3.6rem;
    position: relative;
}

input.details:checked ~ .lab {
    height: auto;
}

.video:not(:empty) {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
}
.video iframe,
.video object,
.video embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
}

[data-distance] .answer input,
[data-distance] .answer select {
    pointer-events: none;
    color: var(--disabled-color);
    background: var(--disabled-background);
}
.border-red .answer input,
.border-red .answer select,
[data-distance="0"] .answer select,
[data-distance="0"] .answer input {
    pointer-events: auto;
    color: var(--enabled-color);
    background: var(--enabled-background);
}

[data-distance] .answer button {
    color: var(--disabled-color);
}
.border-red .answer button,
[data-distance="0"] .answer button {
    color: var(--disabled-color);
}

.theme {
    -webkit-mask-position: center;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-size: contain;
    background-color: var(--medium-blue);
    display: inline-block;
    height: 0.84rem;
    width: 0.84rem;
}
.theme.architecture { -webkit-mask-image: url("../images/themes/Architecture.svg");}
.theme.art { -webkit-mask-image: url("../images/themes/Art.svg");}
.theme.drivingtour { -webkit-mask-image: url("../images/themes/DrivingTour.svg");}
.theme.education { -webkit-mask-image: url("../images/themes/Education.svg");}
.theme.entertainment { -webkit-mask-image: url("../images/themes/Entertainment.svg");}
.theme.exercise { -webkit-mask-image: url("../images/themes/Exercise.svg");}
.theme.fooddrink { -webkit-mask-image: url("../images/themes/FoodDrink.svg");}
.theme.forkids { -webkit-mask-image: url("../images/themes/ForKids.svg");}
.theme.games { -webkit-mask-image: url("../images/themes/Games.svg");}
.theme.history { -webkit-mask-image: url("../images/themes/History.svg");}
.theme.humor { -webkit-mask-image: url("../images/themes/Humor.svg");}
.theme.indoor { -webkit-mask-image: url("../images/themes/Indoor.svg");}
.theme.music { -webkit-mask-image: url("../images/themes/Music.svg");}
.theme.mystery { -webkit-mask-image: url("../images/themes/Mystery.svg");}
.theme.nature { -webkit-mask-image: url("../images/themes/Nature.svg");}
.theme.neighborhood { -webkit-mask-image: url("../images/themes/Neighborhood.svg");}
.theme.park { -webkit-mask-image: url("../images/themes/Park.svg");}
.theme.science { -webkit-mask-image: url("../images/themes/Science.svg");}
.theme.series { -webkit-mask-image: url("../images/themes/Series.svg");}
.theme.sightseeing { -webkit-mask-image: url("../images/themes/Sightseeing.svg");}
.theme.spooky { -webkit-mask-image: url("../images/themes/Spooky.svg");}
.theme.sports { -webkit-mask-image: url("../images/themes/Sports.svg");}
.theme.storytelling { -webkit-mask-image: url("../images/themes/Storytelling.svg");}
.theme.sustainability { -webkit-mask-image: url("../images/themes/Sustainability.svg");}
.theme.technology { -webkit-mask-image: url("../images/themes/Technology.svg");}
.theme.trail { -webkit-mask-image: url("../images/themes/Trail.svg");}
.theme.travel { -webkit-mask-image: url("../images/themes/Travel.svg");}
.theme.tribute { -webkit-mask-image: url("../images/themes/Tribute.svg");}
.theme.walkingtour { -webkit-mask-image: url("../images/themes/WalkingTour.svg");}
.theme.wildlife { -webkit-mask-image: url("../images/themes/Wildlife.svg");}
.theme.other { -webkit-mask-image: url("../images/svg/ph/regular/dots-three-circle.svg");}
.theme.none { -webkit-mask-image: url("../images/svg/ph/regular/x-circle.svg");}

.lab .image {
    height: 3.3rem;
    float: left;
    width: 3.3rem;
    overflow: hidden;
}

input.details:checked ~ .lab .image {
    width: 100%;
    height: auto;
    float: none;
}

.lab .image img {
    background-image: url("../images/balloon.png");
    background-size: cover;
    object-fit: cover;
    width: 100%;
    height: 100%;
}

.lab .title {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding-left: 0.3rem;
    padding-right: 4.0rem;
}

.border-green .title::before,
.border-orange .title::before,
.border-red .title::before,
.border-yellow .title::before {
    position: absolute;
    overflow: visible;
    right: 3.2rem;
}

.border-green .title::before{
    color: var(--green);
    content: '‚úî\fe0e'; /* convert to character for iOS */
}
.border-orange .title::before{
    color: var(--orange);
    content: '‚åò';
}
.border-red .title::before{
    color: var(--red);
    content: '‚úò';
}
.border-yellow .title::before{
    color: var(--yellow);
    content: '‚úΩ';
}

.title span::after {
    display: inline-block;
    transform: scaleX(0.5);
    width: 0.5rem;
    margin-left: -0.1rem;
}

.linear {
    color: var(--orange);
}

.linear::after {
    content: '‚áâ';
}

.random {
    color: var(--medium-blue);
}

.random::after {
    content: '‚áÜ'
}

.lab .adventure,
.lab .stages {
    font-size: 0.84rem;
    line-height: 0.924rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding-left: 0.3rem;
    padding-right: 3.3rem;
    display: block;
}

.lab .themes {
    display: flex;
}

.lab .properties > div {
    display: flex;
}

.icon {
    -webkit-mask-position: center;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-size: contain;
    display: inline-block;
}

.lab .properties .icon {
    background-color: var(--dark-blue);
    height: 0.84rem;
    width: 0.84rem;
}
.icon.calendar-check { -webkit-mask-image: url("../images/svg/ph/regular/calendar-check.svg");}
.icon.star { -webkit-mask-image: url("../images/svg/ph/regular/star.svg");}
.icon.label { -webkit-mask-image: url("../images/svg/ph/regular/tag.svg");}
.icon.timer { -webkit-mask-image: url("../images/svg/ph/regular/timer.svg");}


input.details:checked ~ .lab [id^="country-"]:checked + .country {
    display: grid;
    text-align: right;
    visibility: visible;
}

[id^="themes-"]:checked + * .themes-holder {
    margin-left: auto;
    margin-right: auto;
    grid-column: 1/5;
    grid-row: 2/3;
}

.lab .themes .tag {
    font-size: 0.84rem;
    line-heigt: 0.924rem;
    margin-right: 0.5rem;
    color: var(--medium-blue);
}

.lab .owner,
.lab .location,
.lab .country,
.lab .flag {
    font-size: 0.84rem;
    line-height: 0.924rem;
    color: var(--dark-blue);
}
.lab .owner {
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: auto;
    padding-left: 0.3rem;
}
.lab .location,
.lab .flag,
.lab .country {
    margin-left: auto;
    padding-right: 0.1rem;
}

input.details:checked ~ .lab .title,
input.details:checked ~ .lab .adventure,
input.details:checked ~ .lab .stages {
    padding-right: 0.8rem;
}
input.details:checked ~ .border-green .title::before,
input.details:checked ~ .border-orange .title::before,
input.details:checked ~ .border-red .title::before,
input.details:checked ~ .border-yellow .title::before {
    position: absolute;
    overflow: visible;
    right: 0;
}

.lab .properties {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    font-size: 0.84rem;
    line-height: 0.924rem;
    padding-left: 0.3rem;
    padding-right: 0.1rem;
}
.lab .properties div {
    color: var(--dark-blue);
    white-space: nowrap;
}
.lab .properties span {
    color: var(--medium-blue);
}
.lab .properties .published-holder {
    justify-self: right;
    grid-column: 4/5;
}

.lab .description {
    display: block;
    font-size: 0.84rem;
    line-height: 0.924rem;
    padding-left: 0.3rem;
    margin-top: 0.3rem;
    margin-bottom: 0.5rem;
    position: relative;
}


.lab .description ul {
	margin-left: -0.5rem;
	padding-top: 0.3rem;
}
.lab .description li {
	padding-left: 0.2rem;
}

/* No support for marker content on safari
.lab .description li::marker {
    color: var(--red);
	content: '‚úò';
}
.lab .description li.logged::marker {
    color: var(--green);
	content: '‚úî\fe0e';
}
*/
.lab .description li {
    list-style-type: none;
    margin-left: 1rem;
}
.lab .description li::before {
	content: '‚úò';
    display: inline-block;
    width: 1rem;
}
.lab .description li.logged::before {
	content: '‚úî\fe0e';
}


.lab .challenge {
    display: block;
    padding-left: 0.3rem;
    margin-right: 3.5rem;
    color: var(--medium-blue);
}

.lab .answer {
    margin-left: 0.3rem;
    margin-right: 3.5rem;
    display: flex;
}

.lab .answer input,
.lab .answer select {
    width: 100%;
}

.lab .answer button {
}

.journal {
    display: block;
    font-size: 0.84rem;
    line-height: 0.924rem;
    padding-left: 0.3rem;
    color: var(--dark-blue);
}

.answer + .journal {
    margin-top: 0.3rem;
    margin-bottom: 2rem;
    padding-bottom: 0.3rem;
}

.journal img {
    background-image: url("../images/balloon.png");
    background-size: cover;
    height: auto;
    width: calc(100% - 0.2rem);
}

.journal .video {
    width: calc(100% - 0.2rem);
}

.lab .distance {
    text-align: right;
    width: 5rem;
    display: inline-block;
    font-size: 0.94rem;
    line-height: 1.034rem;
}
input.details:checked ~ .lab .distance {
    width: 9.3rem;
}

.lab .bearing {
    text-align: right;
    width: 3rem;
    display: inline-block;
    font-size: 0.94rem;
    line-height: 1.034rem;

}

.map img {
    background-image: url("../images/balloon.png");
    background-size: cover;
    max-width: 3rem;
    max-height: 3rem;
    margin-left: auto;
    margin-right: auto;
    display: block;
}

.map .title {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding-left: 0.3rem;
    padding-right: 0.1rem;
}

.map .adventure {
    font-size: 0.84rem;
    line-height: 0.924rem;
    white-space: nowrap;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    padding-left: 0.3rem;
    padding-right: 0.2rem;
    float: left;
}

#timestamp {
    float:right; 
    font-size: 0.6rem; 
    margin-right: 1rem;
}

#owners-select:empty {
    display:none;
}

#filter-owners-holder,
#filter-themes-holder {
    display: flex;
    flex-wrap: wrap;
}
#filter-owners-holder:not(:empty) {
    margin-top: 0.5rem;
}

input.inc-exc[type="radio"]:checked + * + * + .label { background-color: var(--green);}
input.inc-exc[type="radio"]:checked + * + * + .label::before { content: '‚úî\fe0e'; }
input.inc-exc[type="radio"]:checked + * + .label { background-color: var(--red); }
input.inc-exc[type="radio"]:checked + * + .label::before { content: '‚úò'; }
input.inc-exc[type="radio"] + .label {
    background-color: var(--gray);
    display: flex;
    margin-right: 0.1rem;
}
input.inc-exc[type="radio"] + .label::before {
    content: '‚úΩ';
    margin-right: 0.1rem;
}
input.inc-exc[type="radio"] { display: none; }

input[id^="disable-"]:checked + *,
input[id^="disable-"]:checked + * + * {
    filter: grayscale(1);
    opacity: 0.4;
}

/* input[id^="disable-"] + * + * > * { min-height: 1.2rem; } */
input[id^="disable-"]:checked + * + * > * {
    max-height: 1.2rem;
    overflow: hidden;
}

@media screen and (max-width: 32rem) {
    input[id^="disable-"] + .filter { grid-column: 1/3; }
    input[id^="disable-"] + * + .filter { grid-column: 1/3; }
    input[id^="disable-"]:checked + .filter { grid-column: 1/2; }
    input[id^="disable-"]:checked + * + .filter { grid-column: 2/3; }
}

.label .theme {
    background-color: var(--white);
}


.compass {
    background-image: url("../images/svg/compass.svg");
    background-size: cover;
    width: 3rem;
    height: 3rem;
    overflow: hidden;
    margin-right: 0.2rem;
    margin-bottom: 0.1rem;
    position: absolute;
    bottom: 0;
    right: 0;
}
.compass::before {
    content: "";
    background-image: url("../images/svg/needle.svg");
    background-size: cover;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
}
.needle5::before { transform: rotate(5deg); }
.needle10::before { transform: rotate(10deg); }
.needle15::before { transform: rotate(15deg); }
.needle20::before { transform: rotate(20deg); }
.needle25::before { transform: rotate(25deg); }
.needle30::before { transform: rotate(30deg); }
.needle35::before { transform: rotate(35deg); }
.needle40::before { transform: rotate(40deg); }
.needle45::before { transform: rotate(45deg); }
.needle50::before { transform: rotate(50deg); }
.needle55::before { transform: rotate(55deg); }
.needle60::before { transform: rotate(60deg); }
.needle65::before { transform: rotate(65deg); }
.needle70::before { transform: rotate(70deg); }
.needle75::before { transform: rotate(75deg); }
.needle80::before { transform: rotate(80deg); }
.needle85::before { transform: rotate(85deg); }
.needle90::before { transform: rotate(90deg); }
.needle95::before { transform: rotate(95deg); }
.needle100::before { transform: rotate(100deg); }
.needle105::before { transform: rotate(105deg); }
.needle110::before { transform: rotate(110deg); }
.needle115::before { transform: rotate(115deg); }
.needle120::before { transform: rotate(110deg); }
.needle125::before { transform: rotate(125deg); }
.needle130::before { transform: rotate(120deg); }
.needle135::before { transform: rotate(135deg); }
.needle140::before { transform: rotate(130deg); }
.needle145::before { transform: rotate(145deg); }
.needle150::before { transform: rotate(140deg); }
.needle155::before { transform: rotate(155deg); }
.needle160::before { transform: rotate(150deg); }
.needle165::before { transform: rotate(165deg); }
.needle170::before { transform: rotate(170deg); }
.needle175::before { transform: rotate(175deg); }
.needle180::before { transform: rotate(180deg); }
.needle185::before { transform: rotate(185deg); }
.needle190::before { transform: rotate(190deg); }
.needle195::before { transform: rotate(195deg); }
.needle200::before { transform: rotate(200deg); }
.needle205::before { transform: rotate(205deg); }
.needle210::before { transform: rotate(210deg); }
.needle215::before { transform: rotate(215deg); }
.needle220::before { transform: rotate(210deg); }
.needle225::before { transform: rotate(225deg); }
.needle230::before { transform: rotate(220deg); }
.needle235::before { transform: rotate(235deg); }
.needle240::before { transform: rotate(230deg); }
.needle245::before { transform: rotate(245deg); }
.needle250::before { transform: rotate(240deg); }
.needle255::before { transform: rotate(255deg); }
.needle260::before { transform: rotate(260deg); }
.needle265::before { transform: rotate(265deg); }
.needle270::before { transform: rotate(270deg); }
.needle275::before { transform: rotate(275deg); }
.needle280::before { transform: rotate(280deg); }
.needle285::before { transform: rotate(285deg); }
.needle290::before { transform: rotate(290deg); }
.needle295::before { transform: rotate(295deg); }
.needle300::before { transform: rotate(300deg); }
.needle305::before { transform: rotate(305deg); }
.needle310::before { transform: rotate(310deg); }
.needle315::before { transform: rotate(315deg); }
.needle320::before { transform: rotate(320deg); }
.needle325::before { transform: rotate(325deg); }
.needle330::before { transform: rotate(330deg); }
.needle335::before { transform: rotate(335deg); }
.needle340::before { transform: rotate(340deg); }
.needle345::before { transform: rotate(345deg); }
.needle350::before { transform: rotate(350deg); }
.needle355::before { transform: rotate(355deg); }


label[for^="bit-"],
label[for^="symbol-"],
label[for="translate"],
label[for="debug"] {
    filter: grayscale(1);
    opacity: 0.25;
    margin-left: auto;
}

#symbol-labs:checked ~ * label[for="symbol-labs"],
#symbol-map:checked ~ * label[for="symbol-map"],
#symbol-settings:checked ~ * label[for="symbol-settings"],
#translate:checked ~ * label[for="translate"],
#bit-bat:checked ~ * label[for="bit-bat"],
#bit-bee:checked ~ * label[for="bit-bee"],
#bit-butterfly:checked ~ * label[for="bit-butterfly"],
#bit-dodo:checked ~ * label[for="bit-dodo"],
#bit-dove:checked ~ * label[for="bit-dove"],
#bit-dragon:checked ~ * label[for="bit-dragon"],
#bit-eagle:checked ~ * label[for="bit-eagle"],
#bit-flamingo:checked ~ * label[for="bit-flamingo"],
#bit-goose:checked ~ * label[for="bit-goose"],
#bit-owl:checked ~ * label[for="bit-owl"],
#bit-parrot:checked ~ * label[for="bit-parrot"],
#bit-peacock:checked ~ * label[for="bit-peacock"],
#bit-phoenix:checked ~ * label[for="bit-phoenix"],
#bit-rooster:checked ~ * label[for="bit-rooster"],
#bit-swan:checked ~ * label[for="bit-swan"],
#bit-turkey:checked ~ * label[for="bit-turkey"],
#debug:checked ~ * label[for="debug"] {
    filter: grayscale(0);
    opacity: 1;
    -webkit-transform: translateZ(0); /* fix iOS bug */
}


#symbol-labs:checked ~ * #labs,
#symbol-map:checked ~ * #map,
#symbol-menu:checked ~ * #menu,
#symbol-page:checked ~ * #page,
#symbol-popup:checked ~ * #popup,
#symbol-settings:checked ~ * #settings,
input.details:checked ~ .lab div.details,
input.details:checked ~ .lab .flag,
#authenticated:checked ~ * .authenticated,
.unauthenticated,
#update:checked ~ * .update,
#page-checkbox:checked ~* .page-checked,
.page-unchecked,
#bit-eagle:checked ~ * .filter,
#bit-swan:checked ~ * .special,
#debug:checked ~ * .debug,
#translate:checked ~ * .translate,
[id^="themes-"]:checked + * .tag,
.border-orange.lab .stages,
.block
{
    display: block;
    visibility: visible;
}

#labs,
#map,
#menu,
#page,
#popup,
#settings,
#labs-holder:not(:empty) ~ *,
input.details ~ .lab div.details,
input[id^="themes-"],
input[id^="country-"],
.authenticated,
#authenticated:checked ~ * .unauthenticated,
.page-checked,
#page-checkbox:checked ~ * .page-unchecked,
.border-orange .adventure,
.border-orange .answer,
.border-orange .challenge,
.lab .stages,
.country,
.debug,
.filter,
.flag,
.special,
.tag,
.translate,
.update,
.hidden {
    display: none;
    visibility: hidden;
}

#debug:checked ~ header {
    height: 5rem;
}
#debug:checked ~ main {
    top: 5rem;
}

#translate:checked ~ * .i18n-untranslated {
    text-decoration: var(--orange) wavy underline;
}
#translate:checked ~ * .i18n-edit:after {
    color: var(--medium-blue);
    content: '‚úé'; /* ‚úèÔ∏è */
    cursor: pointer;
    display: inline-block;
    font-size: 0.84rem;
    line-height: 0.84rem;

    font-weight: normal;
    text-decoration-line: none;
}
